---------------------------------------------------------


---------------------------------------------------------
----: inherit;





calc()
---------------------------------------------------------
*{}                          Universal Selector
p{}                           element Selector
.my-p { }                      class Selector
#my-p { }                       id Selector
p.center{}
.class.class{}
.one,.two {}                   grouping

div .special{}                  nesting
.one span {}
table thead td{}




#pseudo-classes
a:link {}
a:visited {}
a:hover {}                      a:hover MUST come after a:link and a:visited
a:active {}                     a:active MUST come after a:hover
:empty {}
.ch:checked {}
.in:focus {}
:last-child {}

#pseudo-elements
.two::first-letter{}
.three::first-line{}
::selection {}

---------------------------------------------------------


  -webkit-border-radius: 10px;               -webkit- => Chrome, Safari, New Opera Version
  -moz-border-radius: 10px;                  -moz- => Firefox
  -o-border-radius: 10px;                    -o- => Old Version of Opera 
  -ms-border-radius: 10px;                   -ms- => Ie, Edge
---------------------------------------------------------
width: 70%; 300px; [fit-content ,auto,max-content]
max-width: 400px;
width: calc();  

height:20px ;300px;
min-height: 2000px;
max-height: 600px;
---------------------------------------------------------
#ededed 
#f9f9f9
#EEEEEE   #EEE
#f1f1f1; 
#dddddd #ddd
--------------------------background---------------------
background: #ddd;      #   #ffffff url("img_tree.png") no-repeat right top; #shorthand

background: transparent;

background-color: red; /* Color Name */
background-color: rgb(0 0 0 / 50%); /* Red, Green, Blue, Alpha Channel */
                     rgb(255,0,0)       rgba(0, 128, 0, 0.3) 
background-color: #FF0000; /* Color Hex Code */
                    
background-image: url("../imgs/learn-programming.png");
background-repeat:repeat ,no-repeat,repeat-x,repeat-y


background-attachment:scroll          [scroll,fixed]
background-position: left top;        left,right,center    top,bottom,center
                                      30px 0
                                      20% 20%
background-size: auto;[auto,cover,contain]
                         300px 200px   #wedih hight
                         20% 20%
------------------------------color-----------------------
 color: red;
       hsl(0, 100%, 50%)
       rgb(255,0,0)   
       rgba(0, 128, 0, 0.3) 
         rgb(0 0 0 / 50%)
         #FF0000;
       hsla(9, 91.10%, 39.80%, 0.50);
-------------------------------font-----------------------
 font-size: 40px;               [px,em,,2rem,5vw,%]    [,large,small,medium,xx-large]              note:font-size/line-height 
           1.875em; /* 30px/16=1.875em */     note:Viewport is the browser window size. 1vw = 1% of viewport width. If the viewport is 50cm wide, 1vw is 0.5cm.
           0.875em; /* 14px/16=0.875em */
           2.5em; /* 40px/16=2.5em */

font-family: 'Times New Roman', Times, serif;  
              Arial, Helvetica, sans-serif;



font-style: italic; [italic,oblique,normal] 
font-variant: small-caps; [normal,small-caps] 
font-weight: bold;[bold,normal,100->900]

@font-face {
  font-family: "nyfont";
  src: url();
}              


https://www.w3schools.com/css/css_font_websafe.asp
https://www.w3schools.com/css/css_font_google.asp

--------------------------- commet ----------------------
/*     */
---------------------------padding-----------------------
#The CSS padding properties are used to generate space around an element's content, inside of any defined borders.
padding: 0 20px 15px 25px;    [cm,%,px]        #Top Right Bottom Left
padding-bottom: 10px;
padding-top: 10px;
------------------------------margin---------------------
# The CSS margin properties are used to create space around elements, outside of any defined borders.

margin: auto; # can add -1  negatve value      #Top Right Bottom Left
                 20% , 300px  ,,

margin-top: 100px;
margin-bottom: 100px;
margin-right: 150px;
margin-left: 80px;
-------------------------------border--------------------
border: 10px solid red;  #shorthand
        none;

border-left: 6px solid red;
border-right-style: solid;

border-width: 10px; [5px,medium,thick]
border-color: red red red red;       Top Right Bottom Left
border-style: solid; [dotted,dashed,solid,double,none,hidden]
border-radius: 20px;


border-top-left-radius: 20px;
border-top-right-radius: 20px;

border-left-width: 1px;
------------------------------outline---------------------
outline: 10px solid red;

outline-style: dotted;[dotted,dashed,solid,double,,]
outline-color: red; #hsl(0, 100%, 50%),rgb(255, 0, 0),#ff0000,
outline-width: thin;[thin,medium,4px,,]
outline-offset: 15px; #The outline-offset property adds space between an outline and the edge/border of an element. The space between an element and its outline is transparent.
--------------------------------display-------------------------
display:[block,inline,inline-block,none,,inline-flex]

-----------------------------visibility----------------------------
visibility:hidden [hidden,visible];


--------------------------overflow-------------------------------

overflow: visible; [visible,hidden,scroll,auto] 
overflow-x: hidden;[auto]
overflow-wrap:normal [normal,break-word,anywhere] #Specifies whether or not the browser can break lines with long words, if they overflow its container


scrollbar-width: none;
---------------------------text------------------------------

text-shadow: 0 0 0 red;      H-Shadow V-Shadow Blur Color

text-align: center;[right,left,center,justify,start,end]   #justify; value stretches the lines so that each line has equal width (like in newspapers and magazines).
text-align-last;[right,center,left,justify] # The text-align-last property specifies how to align the last line of a text.

direction: ltr;[ltr,rtl]
unicode-bidi: bidi-override; #ex:.noitcerid txet tfel-ot-thgir si sihT
                             # ex  This is right-to-left text direction. => noitcerid txet tfel-ot-thgir si sihT

vertical-align: middle;[middle,top,bottom,,,,,] #[baseline,text-top,text-bottom,sub,super] 
ex:
<div>Elzero Web <img decoding="async" src="https://placehold.co/200x200" alt=""> School</div>
img {vertical-align:middle;} 

text-transform: capitalize;[lowercase,capitalize,uppercase,,,,,]
text-decoration: line-through;   [underline,overline,none,,line-through]  [overline underline]
                  underline red double 5px;  #shorthand     # line color style thickness 

text-decoration-color: blue;
text-decoration-style: solid;[solid,double,dotted,dashed,wavy,,]
text-decoration-thickness: auto; [auto,5px,25%,,,]             #weight

letter-spacing: 2px;   #[-1]                  # property is used to specify the space between the characters in a text.
text-indent: 2px;  # space free befor text    # can add -1  negatve value
line-height: 1; best=1.6==160%

word-spacing: 5px;[-2px]                      # property is used to specify the space between the words in a text.
white-space: nowrap; [wrap,nowrap]            # The white-space property specifies how white-space inside an element is handled.
word-break:break-all [normal,break-all,break-word]

text-overflow: ellipsis;  #...
--------------------------cursor-------------------------------
  cursor: pointer; [pointer,grab ]


---------------------------float------------------------------
/* solve proplem add overflow:hedin to parent   */
/* float and with  coming togather  */

float: left;[right,left,inline-end,none ]
clear: both;[left,right,both,none]                   /*     <div class=".clear"></div>  */


-The clear property can have one of the following values:
    none - The element is not pushed below left or right floated elements. This is default
    left - The element is pushed below left floated elements
    right - The element is pushed below right floated elements
    both - The element is pushed below both left and right floated elements
    inherit - The element inherits the clear value from its parent
    
-When clearing floats, you should match the clear to the float: If an element is floated to the left, then you should clear to the left. Your floated element will continue to float, but the cleared element will appear below it on the web page.

---------------------------flex---------------------------------


#parent
 display: flex;[inline-flex ]
 flex-direction: row; [row,column,row-reverse,column-reverse]
 flex-wrap: nowrap;[nowrap,wrap,wrap-reverse,]
 flex-flow: row wrap; #flex-wrap  +flex-direction
 justify-content: flex-start;[flex-start,flex-end,center,space-between,space-around,space-evenly]              V
 align-items:stretch ;[stretch,flex-start,flex-end,center,]                                                    H
 align-content: stretch;[stretch,flex-start,flex-end,center,space-between,space-around,space-evenly]           betwen item


#child
 flex: 0 1 Auto  [Flex Grow] [Flex Shrink] [Flex Basis]
 flex-grow: 0;[0,1,3,....]
 flex-shrink: 1;[1,2,3,4,5]
 order: 0;[0,1,2,3,4]#-1
 flex-basis: auto;         #??
 align-items: center;[stretch,flex-end, flex-start,center,,]
 align-self:[flex-end, flex-start] # you can apply to individual                                             H only item == align-items



 ------------------------------------grid-------------------------------------
 #parent
display: grid;[inline-grid ]
grid-template-columns: 100px 100px 100px 200px             
                         25% 50% 25%
                         auto auto auto auto auto
                         100px 100px 1fr 2fr
                         repeat(auto-fill, minmax(200px, 1fr));  responsave
                         minmax(200px,400px)
                         repeat(auto-fill,200px)


grid-template-rows: repeat(3, 1fr);          repeat(3, auto);     /*  px ,% ,auto */
                    100px 100px 100px
                    100px auto 100px     
row-gap: 10px;
column-gap: 10px;
gap: 10px 20px;     [Row Gap] [Column Gap]        
justify-content: space-between;[flex-start,flex-end,center,space-between,space-around,space-evenly]              V
align-content: space-between; [stretch,flex-start,flex-end,center,space-between,space-around,space-evenly]           betwen item          
grid-template-areas:
    "logo logo nav nav nav nav nav nav nav nav"
    "cont cont cont cont cont cont cont . side side"
    "foot foot foot foot foot foot foot foot foot foot";


#child
 grid-area: logo;
 grid-column: 1 / 5
              span 4
              2 /span 3
  grid-row:   1 / 5            [Grid-Row-Start] [Grid-Row-End]
              span 4
              2 /span 3

grid-row-start: 2;
grid-column-start: 2;
grid-row-end: 5;
grid-column-end: 6;
grid-area: 2 / 2 / 5 / 6;          grid-area: [Grid-Row-Start] [Grid-Column-Start] [Grid-Row-End] [Grid-Column-End]    
------------------------------opacity---------------------------
opacity: 0.1; # 1.0==100%


--------------------------------position-------------------------
  position: absolute; [static,relative<-self,absolute<-on win (free)(),fixed,sticky,,]
  top: ;
  right: ;
  left: ;
  bottom: ;

ex:
<div class="relative">
  <div class="absolute">

------------------------------ z-index---------------------------


 z-index: 3; #note parent have position;  /*  note z-index not work  if not found position  */

Note: z-index only works on positioned elements (position: absolute, position: relative, position: fixed, or position: sticky) 
and flex items (elements that are direct children of display: flex elements).

 ex:
  position: absolute;
  left: 0px;
  top: 0px;
  z-index: -1;
--------------------------html-list-------------------------------

ul ->  list-style: none;
                  square inside url("sqpurple.gif"); #Shorthand 
       padding-left: 0;
       margin: 0;
       list-style-position: inside;[inside,outside,] # specifies the position of the list points 
       list-style-image: url('/src/sqpurple.gif');
       list-style-type:circle  [none,circle,square,upper-roman, lower-alpha,,]


------------------------------ box-shadow---------------------------
 box-shadow:  0 0 0 0 red inset;                            H-Shadow | V-Shadow | Blur | Spread | Color | Inset or outset

  box-shadow:    0 0 10px 0 #F10,
    0 0 10px 0 #000,
    0 0 10px 0 #080,
    0 0 10px 0 #00f,
    0 0 10px 0 yellow;
---------------------------------box-sizing------------------------
box-sizing:[content-box defalt , border-box ]


---------------------------------transition-----------------------------
 transition-duration: 1s;[1000ms]              /*1000ms-1s-500ms-.5s--  */
  transition-delay: 0.2s;
  transition-property: all; #width,width
                       margin-top,margin-left; /* all-- */   # sreach Animatable CSS properties
                         #note :transition-property can write spesfic property run  

  transition-timing-function: ease-in-out;  /*ease,linear,ease-in,ease-out,ease-in-out  */
  transition: all 2s 0.5s linear;
              wedih 1s ,hight 3s
              margin-let .6s,margin-top .3s 
              all 2s 0.3s linear  # property,duration,delay,timing-function
-----------------------------------Transform--------------------------------------

 transform: scaleX(2);[scaleX(2),scaleY(2),scale(2, 2)] #-1
            rotate(45deg); [rotate(45deg),rotate(1turn),rotate(0.5turn),rotate(0.25turn),,     ]#-1
            translate(-100px, -100px);    [translateX(100px),translateY(100px)]                                             /* + ,-100px,% */
            skewX(10deg); [skewX(10deg), skewX(-10deg),skewY(10deg),skewY(-10deg),skew(10deg, 10deg),,,,,,]
            matrix(1.2, 0.2679, 0, 1.2, 20, 20);  #matrix(scaleX(), skewY(), skewX(), scaleY(), translateX(), translateY())
            transform-origin: 0 50%; #3px        /* x y */
                              [Left ,Center ,Right ][Top ,Center ,Bottom ,]

 transform:scaleX(2) rotate(45deg)



 ------------------------------------------------------------------------------------

 #parent 
  perspective: 300px;
  perspective-origin: center center; for translate3d on z axix

 transform: rotate3d(0, 1, 1, 65deg); # x y z degree
            translate3d(0, 0, 100px); # x y z

----------------------------------------animation--------------------------------------------
  animation: coloring 3s linear 2s infinite reverse;

  animation-name: change-color;
  animation-duration: 2s;
  animation-delay: -2s;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
  animation-direction: reverse;     [normal,reverse,alternate,alternate-reverse,,,] #alternate start from end
  animation-fill-mode:both;  /* [forwards,backwards,both,] */
  animation-play-state: running;[running,paused]

@keyframes change-color {
  from {
    background-color: red;
  }
  to {
    background-color: blue;
  }
}

@keyframes change-color {
  0% {
    background-color: red;
  }
  5% {
    background-color: blue;
  }
  80% {
    background-color: black;
  }
  100% {
    background-color: red;
  }
}
----------------------------------------[!important]----------------------------------

!important

ex:  background-color: red !important;
--------------------------------[variable ]------------------------------------------
:root {                                           # Global Variable
  --mainColor: blue;
  --mainPadding: 10px;
}
.main {
  background-color: var(--mainColor, black);
    padding: calc(20px + var(--mainPadding));
}

.local {
  --mainColor: black;                              # Local Variable
  background-color: var(--mainColor);

}
-------------------------------gradient------------------------------------

background-image: linear-gradient(to right ,red , Green)  /* 0deg -360deg , ... color*/
                                    0deg
                                    360deg

-------------------------------------------------------------------------

caret-color: red;    #pointer in text or p -> |
pointer-events: none;  # close cleck

----------------------------------------[before-after]---------------------------------
content:counter(counter) 
content: attr(data-attr)


-------------------------------Icons-------------------------- # https://www.w3schools.com/icons/fontawesome5_intro.asp
#Font Awesome Icons
<head>
<script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>  #notwork
</head>

<i class="fas fa-bars"></i>

#Bootstrap Icons
<head>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
</head>

<i class="glyphicon glyphicon-cloud"></i>

#Google Icons

<head>
<link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons">
</head>

<i class="material-icons">computer</i>
---------------------------------------------------------

  CSS Selectors
  - *
  - Element => [p, div, h2]
  - Element OtherElement => div p
  - .class-name
  - #id-name
  - .parent .child
  - .class-one.class-two
  - .class-name div, .class-name p
  - Element.class-name => p.class-name
  - .parent > .child => Direct Child


  - Element + Other Element => [div + p]
  - Element ~ Other Elements => [p ~ div]
  - [Attribute]
  - Element[Attribute]
  - [Attribute=Value]
  - Element[Attribute=Value] => input[type="submit"]
  - [Attribute~=Value] => Contains A Word  ex: Attribute="ffff Value"
  - [Attribute*=Value] => Contains String  ex: Attribute="ffffValue"
  - [Attribute^=Value] => Start With A String  ex: Attribute="Value..." or Attribute="Value ..."

  - :first-child
  - :last-child
  - :first-of-type
  - :last-of-type
  - :only-child
   - :only-of-type
---------------------------------------------------------
# .parent > .child => Direct Child
      .parent
        .child Direct Child
        .child Direct Child
        .child Direct Child
        .xx
        .child not Direct Child
#Element + Other Element => [div + p]
    div 
    p

#Element ~ Other Elements => [p ~ div]
p
...
div
...
div

---------------------------------------------------------




---------------------------------------------------------



---------------------------------------------------------



---------------------------------------------------------



---------------------------------------------------------



---------------------------------------------------------